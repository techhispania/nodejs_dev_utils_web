<div class="container mt-4">
    <h3>Save new appliation credentials</h3>
    <form id="inputIpForm">
        <div class="mb-3">
            <label for="application_input" class="form-label">Application name:</label>
            <input class="form-control" id="application_input" type="text" placeholder='Enter application name'>
        </div>

        <div class="mb-3">
            <label for="user_input" class="form-label">Username:</label>
            <input class="form-control" id="user_input" type="text" placeholder='Enter username'>
        </div>

        <div class="mb-3">
            <label for="password_input" class="form-label">Password:</label>
            <input class="form-control" id="password_input" type="password" placeholder='Enter password'>
        </div>

        <button type="button" class="btn btn-primary" id="save_btn">Save</button>
    </form>
</div>
<div class="container mt-4">
    <h3>Credentials list</h3>

    {{#if credentials.length}}
    <table class="table table-striped table-bordered">
        <thead class="table-primary">
            <tr>
                <th>Application</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
        {{#each credentials}}
        <tr>
            <td>{{this.application_name}}</td>
            <td class="text-center">
                <button data-id="{{this._id}}" class="btn btn-primary btn-show-credentials">
                    <i class="bi bi-eye"></i> Show
                </button>
                <button data-id="{{this._id}}" class="btn btn-primary btn-edit-credentials">
                    <i class="bi bi-pencil"></i> Edit
                </button>
                <button data-id="{{this._id}}" class="btn btn-primary btn-delete-credentials">
                    <i class="bi bi-trash"></i> Remove
                </button>
            </td>
        </tr>
        {{/each}}
        </tbody>
    </table>
    {{else}}
        <div class="alert alert-info">No credentials found</div>
    {{/if}}
</div>

<!-- Alert where credentials are showed -->
<div class="modal fade" id="credentialsModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Credentials</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <p><strong>Username:</strong> <span id="modal-username"></span></p>
        <p><strong>Password:</strong> <span id="modal-password"></span></p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

<script>
    const save_btn = document.getElementById("save_btn")
    const application_input = document.getElementById("application_input")
    const user_input = document.getElementById("user_input")
    const password_input = document.getElementById("password_input")

    save_btn.addEventListener("click", async() => {
        console.log("Request to server to store the new credential")
        try {
            const response = await fetch("/api/credentials", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "Accept": "application/json"
                },
                body: JSON.stringify({application_name: application_input.value.trim(),
                                    username: user_input.value.trim(),
                                    password: password_input.value.trim()})
            })
            console.log("Request done")
            if (!response.ok) {
                throw new Error(`Error storing the credentials for application ${application_input.value.trim()}. Response: ${JSON.stringify(response)}`)
            }

            const data = await response.json()

            console.log(`data: ${JSON.stringify(data)}`)

            application_input.value = ""
            user_input.value = ""
            password_input.value = ""
        } catch (error) {
            console.error(`Error storing credentials: ${error}`)
            alert("There was a problem storing the credentials")
        }
    })

    document.querySelectorAll(".btn-show-credentials").forEach(btn => {
        btn.addEventListener("click", async () => {
            const id = btn.dataset.id;
            console.log(`Show credentials for id: ${id}`);

            try {
                const response = await fetch(`/api/credentials/${id}`, {
                    method: "GET",
                    headers: {
                        "Accept": "application/json"
                    }
                })
                console.log("Request done")
                if (!response.ok) {
                    throw new Error(`Error getting the credentials for id ${id}. Response: ${JSON.stringify(response)}`)
                }

                const data = await response.json()

                console.log(`data: ${JSON.stringify(data)}`)

                showCredentialsAlert(data.username, data.password)
            } catch (error) {
                console.error(`Error getting credentials: ${error}`)
                alert("There was a problem getting the credentials")
            }
        });
    });

    function showCredentialsAlert(username, password) {
        document.getElementById("modal-username").textContent = username;
        document.getElementById("modal-password").textContent = password;

        const modalEl = document.getElementById("credentialsModal");
        const modal = new bootstrap.Modal(modalEl);
        modal.show();

        setTimeout(() => {
            modal.hide();
        }, 30000);

    }
</script>